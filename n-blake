#!/bin/bash
#  This bash script uses openssl & the kernel entropy pools to generate `n` json-formatted blake2b512 digests.
#  /dev/urandom & /dev/random pull are used to access the pool, requests block if the pool is empty.
#  Some OS don't support entropy pools, they will indefinetly block on the read of /dev/urandom.
#
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ptr=0
n=${1:-5}
output=${2:-"output.$RANDOM.json"}

function _ 
{
    cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1 | base64 - | openssl dgst -blake2b512 | cut -c 10- 
}
function __open 
{
    _  | jq -R '{ "token": '.', "id": '0' }' > $output 
}
function __add
{
   _ | openssl dgst -blake2b512 | cut -c 10- | jq -R '{ "token": '.', "id": '${1}' }' >> $output
}

function __close
{
   cat $output | jq -s '.'
   rm -rf $output
   exit 0
}

__open
for i in `seq $n`; do
  __add "$(($i+$ptr))"
  ptr=$((ptr+$(($i % 3 + $ptr % 2))))
done
__close
